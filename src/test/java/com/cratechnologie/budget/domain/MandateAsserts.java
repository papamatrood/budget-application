package com.cratechnologie.budget.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MandateAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMandateAllPropertiesEquals(Mandate expected, Mandate actual) {
        assertMandateAutoGeneratedPropertiesEquals(expected, actual);
        assertMandateAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMandateAllUpdatablePropertiesEquals(Mandate expected, Mandate actual) {
        assertMandateUpdatableFieldsEquals(expected, actual);
        assertMandateUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMandateAutoGeneratedPropertiesEquals(Mandate expected, Mandate actual) {
        assertThat(actual)
            .as("Verify Mandate auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMandateUpdatableFieldsEquals(Mandate expected, Mandate actual) {
        assertThat(actual)
            .as("Verify Mandate relevant properties")
            .satisfies(a -> assertThat(a.getMandateNumber()).as("check mandateNumber").isEqualTo(expected.getMandateNumber()))
            .satisfies(a -> assertThat(a.getMandateDate()).as("check mandateDate").isEqualTo(expected.getMandateDate()))
            .satisfies(a -> assertThat(a.getIssueSlipNumber()).as("check issueSlipNumber").isEqualTo(expected.getIssueSlipNumber()))
            .satisfies(a ->
                assertThat(a.getMonthAndYearOfIssue()).as("check monthAndYearOfIssue").isEqualTo(expected.getMonthAndYearOfIssue())
            )
            .satisfies(a ->
                assertThat(a.getSupportingDocuments()).as("check supportingDocuments").isEqualTo(expected.getSupportingDocuments())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMandateUpdatableRelationshipsEquals(Mandate expected, Mandate actual) {
        assertThat(actual)
            .as("Verify Mandate relationships")
            .satisfies(a -> assertThat(a.getEngagement()).as("check engagement").isEqualTo(expected.getEngagement()));
    }
}
