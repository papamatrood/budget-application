package com.cratechnologie.budget.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArticleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleAllPropertiesEquals(Article expected, Article actual) {
        assertArticleAutoGeneratedPropertiesEquals(expected, actual);
        assertArticleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleAllUpdatablePropertiesEquals(Article expected, Article actual) {
        assertArticleUpdatableFieldsEquals(expected, actual);
        assertArticleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleAutoGeneratedPropertiesEquals(Article expected, Article actual) {
        assertThat(actual)
            .as("Verify Article auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleUpdatableFieldsEquals(Article expected, Article actual) {
        assertThat(actual)
            .as("Verify Article relevant properties")
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()))
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getDesignation()).as("check designation").isEqualTo(expected.getDesignation()))
            .satisfies(a -> assertThat(a.getAccountDiv()).as("check accountDiv").isEqualTo(expected.getAccountDiv()))
            .satisfies(a -> assertThat(a.getCodeEnd()).as("check codeEnd").isEqualTo(expected.getCodeEnd()))
            .satisfies(a -> assertThat(a.getParagraph()).as("check paragraph").isEqualTo(expected.getParagraph()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleUpdatableRelationshipsEquals(Article expected, Article actual) {
        assertThat(actual)
            .as("Verify Article relationships")
            .satisfies(a -> assertThat(a.getChapter()).as("check chapter").isEqualTo(expected.getChapter()))
            .satisfies(a -> assertThat(a.getRecipes()).as("check recipes").isEqualTo(expected.getRecipes()))
            .satisfies(a -> assertThat(a.getExpenses()).as("check expenses").isEqualTo(expected.getExpenses()));
    }
}
