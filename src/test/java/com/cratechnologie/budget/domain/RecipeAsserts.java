package com.cratechnologie.budget.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecipeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeAllPropertiesEquals(Recipe expected, Recipe actual) {
        assertRecipeAutoGeneratedPropertiesEquals(expected, actual);
        assertRecipeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeAllUpdatablePropertiesEquals(Recipe expected, Recipe actual) {
        assertRecipeUpdatableFieldsEquals(expected, actual);
        assertRecipeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeAutoGeneratedPropertiesEquals(Recipe expected, Recipe actual) {
        assertThat(actual)
            .as("Verify Recipe auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeUpdatableFieldsEquals(Recipe expected, Recipe actual) {
        assertThat(actual)
            .as("Verify Recipe relevant properties")
            .satisfies(a ->
                assertThat(a.getAchievementsInThePastYear())
                    .as("check achievementsInThePastYear")
                    .isEqualTo(expected.getAchievementsInThePastYear())
            )
            .satisfies(a -> assertThat(a.getNewYearForecast()).as("check newYearForecast").isEqualTo(expected.getNewYearForecast()))
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeUpdatableRelationshipsEquals(Recipe expected, Recipe actual) {
        assertThat(actual)
            .as("Verify Recipe relationships")
            .satisfies(a -> assertThat(a.getFinancialYear()).as("check financialYear").isEqualTo(expected.getFinancialYear()))
            .satisfies(a -> assertThat(a.getArticles()).as("check articles").isEqualTo(expected.getArticles()));
    }
}
